PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS FUNCIONARIO;
DROP TABLE IF EXISTS MEDICO;
DROP TABLE IF EXISTS ENFERMEIRO;
DROP TABLE IF EXISTS TECNICO;
DROP TABLE IF EXISTS ESPECIALIDADE;
DROP TABLE IF EXISTS CONSULTA;
DROP TABLE IF EXISTS SALA_DE_EXAME;
DROP TABLE IF EXISTS EQUIPAMENTO;
DROP TABLE IF EXISTS UTENTE;
DROP TABLE IF EXISTS INTERNAMENTO;
DROP TABLE IF EXISTS R_MEDICO_ESPECIALIDADE;
DROP TABLE IF EXISTS R_ESPECIALIDADE_EQUIPAMENTO;
DROP TABLE IF EXISTS R_EQUIPAMENTO_SALA_DE_EXAME;
DROP TABLE IF EXISTS R_MANUTENCAO;
DROP TABLE IF EXISTS R_ENFERMEIRO_INTERNAMENTO;

CREATE TABLE FUNCIONARIO(
    numeroDeFuncionario INTEGER NOT NULL,
    nome TEXT,
    dataDeNascimento DATE,
    inicioDeFuncoes DATE,
    PRIMARY KEY (numeroDeFuncionario)
    --Completo e disjunto (restrição a ser implementada na próxima entrega).
);

CREATE TABLE MEDICO(
    numeroDeFuncionario INTEGER NOT NULL,
    PRIMARY KEY (numeroDeFuncionario),
    CONSTRAINT MEDICO_FUNCIONARIO_FK FOREIGN KEY(numeroDeFuncionario) REFERENCES FUNCIONARIO(numeroDeFuncionario)
);

CREATE TABLE ENFERMEIRO(
    numeroDeFuncionario INTEGER NOT NULL,
    PRIMARY KEY (numeroDeFuncionario),
    CONSTRAINT MEDICO_FUNCIONARIO_FK FOREIGN KEY(numeroDeFuncionario) REFERENCES FUNCIONARIO(numeroDeFuncionario)
);

CREATE TABLE TECNICO(
    numeroDeFuncionario INTEGER NOT NULL,
    PRIMARY KEY (numeroDeFuncionario),
    CONSTRAINT MEDICO_FUNCIONARIO_FK FOREIGN KEY(numeroDeFuncionario) REFERENCES FUNCIONARIO(numeroDeFuncionario)
);

CREATE TABLE ESPECIALIDADE(
    andar INTEGER NOT NULL,
    alaHospitalar TEXT NOT NULL,
    numeroDeSalas INTEGER,
    lider INTEGER NOT NULL,
    PRIMARY KEY (andar, alaHospitalar),
    CONSTRAINT ESPECIALIDADE_MEDICO_FK FOREIGN KEY(lider) REFERENCES MEDICO(numeroDeFuncionario)
);

CREATE TABLE UTENTE(
    numeroDeUtente INTEGER NOT NULL,
    nome TEXT,
    dataDeNascimento DATE,
    PRIMARY KEY(numeroDeUtente)
);

CREATE TABLE SALA_DE_EXAME(
    numeroDaSala INTEGER NOT NULL,
    area INTEGER,
    andar INTEGER NOT NULL,
    ala TEXT NOT NULL,
    PRIMARY KEY(numeroDaSala),
    CONSTRAINT SALA_DE_EXAME_ESPECIALIDADE_FK FOREIGN KEY(andar, ala) REFERENCES ESPECIALIDADE(andar, alaHospitalar)
);

CREATE TABLE CONSULTA(
    id INTEGER NOT NULL,
    data DATE,
    razao TEXT,
    nivelDeUrgencia TEXT,
    medico INTEGER NOT NULL,
    andar INTEGER NOT NULL,
    ala TEXT NOT NULL,
    utente INTEGER NOT NULL,
    sala INTEGER NOT NULL,
    PRIMARY KEY(id),
    CONSTRAINT CONSULTA_MEDICO_FK FOREIGN KEY(medico) REFERENCES MEDICO(numeroDeFuncionario),
    CONSTRAINT CONSULTA_ESPECIALIDADE_FK FOREIGN KEY(andar, ala) REFERENCES ESPECIALIDADE(andar, alaHospitalar),
    CONSTRAINT CONSULTA_UTENTE_FK FOREIGN KEY(utente) REFERENCES UTENTE(numeroDeUtente),
    CONSTRAINT CONSULTA_SALA_DE_EXAME_FK FOREIGN KEY(sala) REFERENCES SALA_DE_EXAME(numeroDaSala),
    CONSTRAINT NIVEL_DE_URGENCIA_CHK CHECK(nivelDeUrgencia LIKE 'normal' OR nivelDeUrgencia LIKE 'grave' OR nivelDeUrgencia LIKE 'muito grave')
);

CREATE TABLE EQUIPAMENTO(
    id INTEGER NOT NULL,
    nome TEXT,
    tempoDeArmazenamento TIME,
    proximaDataAExpirar DATE,
    PRIMARY KEY (id)
);

CREATE TABLE INTERNAMENTO(
    id INTEGER NOT NULL,
    dataDeEntrada DATE,
    dataPrevistaDeAlta DATE,
    tratamento TEXT,
    numeroDoQuarto INTEGER,
    consulta INTEGER NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT INTERNAMENTO_CONSULTA_FK FOREIGN KEY(consulta) REFERENCES CONSULTA(id),
    CONSTRAINT DATE_CHK CHECK (dataPrevistaDeAlta > dataDeEntrada)
    --A data de entrada tem de ser igual ou posterior à data de consulta (restrição a ser implementada na próxima entrega).
);

CREATE TABLE R_MEDICO_ESPECIALIDADE(
    numeroDeFuncionario INTEGER NOT NULL,
    andar INTEGER NOT NULL,
    ala TEXT NOT NULL,
    PRIMARY KEY (numeroDeFuncionario, andar, ala),
    CONSTRAINT R_MEDICO_ESPECIALIDADE_MEDICO_FK FOREIGN KEY(numeroDeFuncionario) REFERENCES MEDICO(numeroDeFuncionario),
    CONSTRAINT R_MEDICO_ESPECIALIDADE_ESPECIALIDADE_FK FOREIGN KEY(andar, ala) REFERENCES ESPECIALIDADE(andar, alaHospitalar)
);

CREATE TABLE R_ESPECIALIDADE_EQUIPAMENTO(
    andar INTEGER NOT NULL,
    ala TEXT NOT NULL,
    equipamento INTEGER NOT NULL,
    exemplaresEmStock INTEGER,
    PRIMARY KEY (andar, ala, equipamento),
    CONSTRAINT R_ESPECIALIDADE_EQUIPAMENTO_ESPECIALIDADE_FK FOREIGN KEY(andar, ala) REFERENCES ESPECIALIDADE(andar, alaHospitalar),
    CONSTRAINT R_ESPECIALIDADE_EQUIPAMENTO_EQUIMAPENTO_FK FOREIGN KEY(equipamento) REFERENCES EQUIPAMENTO(id)
);

CREATE TABLE R_EQUIPAMENTO_SALA_DE_EXAME(
    equipamento INTEGER NOT NULL,
    sala INTEGER NOT NULL,
    exemplaresDisponiveis INTEGER,
    PRIMARY KEY(equipamento, sala),
    CONSTRAINT R_EQUIPAMENTO_SALA_DE_EXAME_EQIPAMENTO_FK FOREIGN KEY(equipamento) REFERENCES EQUIPAMENTO(id),
    CONSTRAINT R_EQUIPAMENTO_SALA_DE_EXAME_SALA_DE_EXAME_FK FOREIGN KEY(sala) REFERENCES SALA_DE_EXAME(numeroDaSala)
    --O número de exemplares disponíveis não deve exceder o número de exemplares em stock (restrição a ser implementada na próxima entrega).
);

CREATE TABLE R_MANUTENCAO(
    tecnico INTEGER NOT NULL,
    sala INTEGER NOT NULL,
    PRIMARY KEY (tecnico, sala),
    CONSTRAINT R_MANUTENCAO_TECNICO_FK FOREIGN KEY(tecnico) REFERENCES TECNICO(numeroDeFuncionario),
    CONSTRAINT R_MANUTENCAO_SALA_DE_EXAME_FK FOREIGN KEY(sala) REFERENCES SALA_DE_EXAME(numeroDaSala)
);

CREATE TABLE R_ENFERMEIRO_INTERNAMENTO(
    enfermeiro INTEGER NOT NULL,
    internamento INTEGER NOT NULL,
    PRIMARY KEY (enfermeiro, internamento),
    CONSTRAINT R_ENFERMEIRO_INTERNAMENTO_ENFERMEIRO_FK FOREIGN KEY(enfermeiro) REFERENCES ENFERMEIRO(numeroDeFuncionario),
    CONSTRAINT R_ENFERMEIRO_INTERNAMENTO_INTERNAMENTO_FK FOREIGN KEY(internamento) REFERENCES INTERNAMENTO(id)
);
